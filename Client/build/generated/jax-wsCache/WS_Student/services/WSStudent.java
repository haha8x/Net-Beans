
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WS_Student", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSStudent {


    /**
     * 
     * @return
     *     returns java.util.List<services.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllStudent", targetNamespace = "http://services/", className = "services.GetAllStudent")
    @ResponseWrapper(localName = "getAllStudentResponse", targetNamespace = "http://services/", className = "services.GetAllStudentResponse")
    @Action(input = "http://services/WS_Student/getAllStudentRequest", output = "http://services/WS_Student/getAllStudentResponse")
    public List<Student> getAllStudent();

    /**
     * 
     * @param student
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addNewStudent", targetNamespace = "http://services/", className = "services.AddNewStudent")
    @ResponseWrapper(localName = "addNewStudentResponse", targetNamespace = "http://services/", className = "services.AddNewStudentResponse")
    @Action(input = "http://services/WS_Student/addNewStudentRequest", output = "http://services/WS_Student/addNewStudentResponse")
    public Boolean addNewStudent(
        @WebParam(name = "student", targetNamespace = "")
        Student student);

    /**
     * 
     * @param rollNo
     * @return
     *     returns services.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentByRollNo", targetNamespace = "http://services/", className = "services.FindStudentByRollNo")
    @ResponseWrapper(localName = "findStudentByRollNoResponse", targetNamespace = "http://services/", className = "services.FindStudentByRollNoResponse")
    @Action(input = "http://services/WS_Student/findStudentByRollNoRequest", output = "http://services/WS_Student/findStudentByRollNoResponse")
    public Student findStudentByRollNo(
        @WebParam(name = "rollNo", targetNamespace = "")
        String rollNo);

    /**
     * 
     * @param student
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateStudent", targetNamespace = "http://services/", className = "services.UpdateStudent")
    @ResponseWrapper(localName = "updateStudentResponse", targetNamespace = "http://services/", className = "services.UpdateStudentResponse")
    @Action(input = "http://services/WS_Student/updateStudentRequest", output = "http://services/WS_Student/updateStudentResponse")
    public Boolean updateStudent(
        @WebParam(name = "student", targetNamespace = "")
        Student student);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isExist", targetNamespace = "http://services/", className = "services.IsExist")
    @ResponseWrapper(localName = "isExistResponse", targetNamespace = "http://services/", className = "services.IsExistResponse")
    @Action(input = "http://services/WS_Student/isExistRequest", output = "http://services/WS_Student/isExistResponse")
    public Boolean isExist(
        @WebParam(name = "arg0", targetNamespace = "")
        Student arg0);

}
